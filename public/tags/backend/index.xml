<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Backend on The Coding Notes</title>
    <link>http://localhost:1313/tags/backend/</link>
    <description>Recent content in Backend on The Coding Notes</description>
    <image>
      <title>The Coding Notes</title>
      <url>https://images.unsplash.com/photo-1510843572979-e4b9e790fdd7?auto=format&amp;fit=crop&amp;w=720&amp;q=80</url>
      <link>https://images.unsplash.com/photo-1510843572979-e4b9e790fdd7?auto=format&amp;fit=crop&amp;w=720&amp;q=80</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Apr 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/backend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generate Converter for Kotlin Class by KAPT</title>
      <link>http://localhost:1313/posts/konverter/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/konverter/</guid>
      <description>&lt;h1 id=&#34;background&#34;&gt;Background&lt;/h1&gt;
&lt;p&gt;In web backend development, the operation of an entity need to code a number of similar classes to handle request (avoiding the direct use of entities), which resulting in related terminology:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PO (&lt;em&gt;Persistent Object&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;DTO (&lt;em&gt;Data Transfer Object&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;BO (&lt;em&gt;Business Object&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;VO (&lt;em&gt;View Object&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these classes trim a few fields directly from the entity. For example, by using &lt;code&gt;OrderEntity&lt;/code&gt; in a request to create an order, it would process like following:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
