<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Code Generation on The Coding Notes</title>
    <link>https://lexcao.io/tags/code-generation/</link>
    <description>Recent content in Code Generation on The Coding Notes</description>
    <image>
      <title>The Coding Notes</title>
      <url>https://images.unsplash.com/photo-1510843572979-e4b9e790fdd7?auto=format&amp;fit=crop&amp;w=720&amp;q=80</url>
      <link>https://images.unsplash.com/photo-1510843572979-e4b9e790fdd7?auto=format&amp;fit=crop&amp;w=720&amp;q=80</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 03 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://lexcao.io/tags/code-generation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducing genapi: A Golang HTTP Client Code Generator</title>
      <link>https://lexcao.io/posts/genapi/</link>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://lexcao.io/posts/genapi/</guid>
      <description>&lt;p&gt;In this article, I&amp;rsquo;m excited to introduce genapi, a code generator for Golang HTTP clients. For comprehensive documentation and implementation details, you can explore the &lt;a href=&#34;https://lexcao.io/genapi/&#34;&gt;genapi website&lt;/a&gt; or check out our &lt;a href=&#34;https://github.com/lexcao/genapi&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;from-manual-to-automatic-evolution-of-golang-http-client&#34;&gt;From Manual to Automatic: Evolution of Golang HTTP Client&lt;/h1&gt;
&lt;p&gt;In Golang development, making HTTP API calls is a very common requirement. Through a weather API example, this article will demonstrate how HTTP client code evolves from manual writing to automatic generation. Let&amp;rsquo;s look at this simple weather API:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
